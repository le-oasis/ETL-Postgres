input {
        # pg_stat_database
        jdbc {
                jdbc_driver_library => "/usr/share/logstash/vendor/jdbc/postgresql.jar"
                jdbc_driver_class => "org.postgresql.Driver"
                jdbc_connection_string => "jdbc:postgresql://postgres:5432/airflow"
                jdbc_user => "airflow"
                jdbc_password => "airflow"
                statement => "SELECT * FROM states"
                schedule => "* * * * *"
                type => "states_db"
        }

        # pg_stat_user_tables
        jdbc {
                jdbc_driver_library => "/usr/share/logstash/vendor/jdbc/postgresql.jar"
                jdbc_driver_class => "org.postgresql.Driver"
                jdbc_connection_string => "jdbc:postgresql://postgres:5432/airflow"
                jdbc_user => "airflow"
                jdbc_password => "airflow"
                statement => "SELECT * FROM needs"
                schedule => "* * * * *"
                type => "needs_db"
        }

        # pg_stat_user_tables
        jdbc {
                jdbc_driver_library => "/usr/share/logstash/vendor/jdbc/postgresql.jar"
                jdbc_driver_class => "org.postgresql.Driver"
                jdbc_connection_string => "jdbc:postgresql://postgres:5432/airflow"
                jdbc_user => "airflow"
                jdbc_password => "airflow"
                statement => "SELECT * FROM sentiment"
                schedule => "* * * * *"
                type => "sentiment_db"
        }

        # pg_stat_user_tables
        jdbc {
                jdbc_driver_library => "/usr/share/logstash/vendor/jdbc/postgresql.jar"
                jdbc_driver_class => "org.postgresql.Driver"
                jdbc_connection_string => "jdbc:postgresql://postgres:5432/airflow"
                jdbc_user => "airflow"
                jdbc_password => "airflow"
                statement => "SELECT * FROM voting"
                schedule => "* * * * *"
                type => "voting_db"
        }

        # pg_stat_user_tables
        jdbc {
                jdbc_driver_library => "/usr/share/logstash/vendor/jdbc/postgresql.jar"
                jdbc_driver_class => "org.postgresql.Driver"
                jdbc_connection_string => "jdbc:postgresql://postgres:5432/airflow"
                jdbc_user => "airflow"
                jdbc_password => "airflow"
                statement => "SELECT * FROM party"
                schedule => "* * * * *"
                type => "party_db"
        }


}

# output {
#         elasticsearch {
#                 hosts => "http://localhost:9200"
#                 index => "%{type}"
#         }
# }


output {
    stdout { codec => rubydebug { metadata => true } }
    if [type] == "states_db" {
        elasticsearch {
            hosts => "elasticsearch:9200"
            user => "elastic"
            password => "changeme"
            ecs_compatibility => disabled
            index => "states_db"
            doc_as_upsert => true
        }
    }
    else if [type] == "needs_db" {
        elasticsearch {
            hosts => "elasticsearch:9200"
            user => "elastic"
            password => "changeme"
            ecs_compatibility => disabled
            index => "needs_db"
            doc_as_upsert => true
        }
    }
    else if [type] == "sentiment_db" {
        elasticsearch {
            hosts => "elasticsearch:9200"
            user => "elastic"
            password => "changeme"
            ecs_compatibility => disabled
            index => "sentiment_db"
            doc_as_upsert => true
        }
    }
    else if [type] == "voting_db" {
        elasticsearch {
            hosts => "elasticsearch:9200"
            user => "elastic"
            password => "changeme"
            ecs_compatibility => disabled
            index => "voting_db"
            doc_as_upsert => true
        }
    }
    else if [type] == "party_db" {
        elasticsearch {
            hosts => "elasticsearch:9200"
            user => "elastic"
            password => "changeme"
            ecs_compatibility => disabled
            index => "party_db"
            doc_as_upsert => true
        }
    }
}

